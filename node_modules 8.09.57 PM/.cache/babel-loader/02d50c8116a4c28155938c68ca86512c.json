{"ast":null,"code":"import _classCallCheck from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erbear/primeTier2/sagas-portfolio-master/src/components/ProjectsList/ProjectsList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nvar ProjectsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectsList, _Component);\n\n  function ProjectsList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProjectsList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProjectsList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getProjects = function () {\n      var action = {\n        type: 'GET_PROJECTS'\n      };\n\n      _this.props.dispatch(action);\n    };\n\n    return _this;\n  }\n\n  _createClass(ProjectsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getProjects();\n    }\n  }, {\n    key: \"displayDescription\",\n    value: function displayDescription() {\n      if (!this.props.project.description) {\n        return null;\n      } else {\n        return this.props.project.description;\n      }\n    }\n  }, {\n    key: \"displaythumbnail\",\n    value: function displaythumbnail() {\n      if (!this.props.project.thumbnail) {\n        return null;\n      } else {\n        return this.props.project.thumbnail;\n      }\n    }\n  }, {\n    key: \"displayWebsite\",\n    value: function displayWebsite() {\n      if (!this.props.project.website) {\n        return null;\n      } else {\n        return this.props.project.website;\n      }\n    }\n  }, {\n    key: \"displayProjectDate\",\n    value: function displayProjectDate() {\n      if (!this.props.project.date_completed) {\n        return null;\n      } else {\n        return this.props.project.date_completed;\n      }\n    }\n  }, {\n    key: \"displayTagId\",\n    value: function displayTagId() {\n      if (!this.props.project.tag_id) {\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var styles = {\n        card: {\n          maxWidth: 345\n        },\n        media: {\n          height: 140\n        }\n      };\n      return function MediaCard(props) {\n        var classes = props.classes;\n        return React.createElement(Card, {\n          className: classes.card,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(CardActionArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(CardMedia, {\n          className: classes.media,\n          image: \"/static/images/cards/contemplative-reptile.jpg\",\n          title: \"Contemplative Reptile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }), React.createElement(CardContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"h2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, this.props.project.name), React.createElement(Typography, {\n          component: \"p\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), this.displayDescription(), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }), this.displaythumbnail(), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }), this.displayWebsite(), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), this.displayProjectDate(), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }), this.displayTagId()))), React.createElement(CardActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"small\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Share\"), React.createElement(Button, {\n          size: \"small\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"Learn More\")));\n      };\n    }\n  }]);\n\n  return ProjectsList;\n}(Component);\n\nvar mapReduxStoreToProps = function mapReduxStoreToProps(reduxStore) {\n  return {\n    reduxStore: reduxStore\n  };\n}; // export default connect(mapReduxStoreToProps)(ProjectsList);\n\n\nexport default withStyles(styles)(MediaCard);\n{\n  /* <td>{this.props.project.name}</td> \n                             <br></br>\n                             <td>{this.props.project.description}</td>\n                     <br></br>\n                             <td>{this.props.project.thumbnail}</td>\n                     <br></br>\n                             <td>{this.props.project.website}</td>\n                     <br></br>\n                             <td>{this.props.project.date_completed}</td>\n                     <br></br>\n                             <td>{this.props.project.tag_id}</td>  */\n}","map":{"version":3,"sources":["/Users/erbear/primeTier2/sagas-portfolio-master/src/components/ProjectsList/ProjectsList.js"],"names":["React","Component","connect","PropTypes","withStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","ProjectsList","getProjects","action","type","props","dispatch","project","description","thumbnail","website","date_completed","tag_id","styles","card","maxWidth","media","height","MediaCard","classes","name","displayDescription","displaythumbnail","displayWebsite","displayProjectDate","displayTagId","mapReduxStoreToProps","reduxStore"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nclass ProjectsList extends Component {\n    \n\n    componentDidMount() {\n        this.getProjects();\n    }\n\n    getProjects = () => {\n        const action = { type: 'GET_PROJECTS' };\n        this.props.dispatch(action);\n    }\n\n    displayDescription() {\n        if (!this.props.project.description) {\n        return null;\n    } else{\n        return (this.props.project.description)\n    }\n}\n    \n    displaythumbnail() {\n            if(!this.props.project.thumbnail) {\n            return null;\n            } else {\n                return (this.props.project.thumbnail)\n            }\n    }\n\n    displayWebsite() {\n        if (!this.props.project.website) {\n            return null;\n        } else {\n            return (this.props.project.website)\n        }\n    }\n\n    displayProjectDate() {\n        if (!this.props.project.date_completed) {\n            return null;\n        } else {\n            return (this.props.project.date_completed)\n        }\n\n    }\n   \n    displayTagId(){\n        if (!this.props.project.tag_id) {\n            return null;\n        }\n\n    }\n    \n\n\n    render() {\n        const styles = {\n            card: {\n                maxWidth: 345,\n            },\n            media: {\n                height: 140,\n            },\n        };       \n        return (\n            function MediaCard(props) {\n                const { classes } = props;\n                return (\n                    <Card className={classes.card}>\n                        <CardActionArea>\n                            <CardMedia\n                                className={classes.media}\n                                image=\"/static/images/cards/contemplative-reptile.jpg\"\n                                title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {this.props.project.name}\n                                </Typography>\n                                <Typography component=\"p\">\n\n                        <br></br>\n                          {this.displayDescription()}\n                <br></br>\n                        {this.displaythumbnail()}\n                <br></br>\n                          {this.displayWebsite()}\n                <br></br>\n                {this.displayProjectDate()}\n                <br></br>\n                          {this.displayTagId()}\n                 </Typography>\n        </CardContent>\n      </CardActionArea>\n                    <CardActions>\n                        <Button size=\"small\" color=\"primary\">\n                            Share\n        </Button>\n                        <Button size=\"small\" color=\"primary\">\n                            Learn More\n        </Button>\n                    </CardActions>\n    </Card >\n        );\n    }\n        )}\n}\n\n\n\nconst mapReduxStoreToProps = (reduxStore) => ({\n    reduxStore\n});\n// export default connect(mapReduxStoreToProps)(ProjectsList);\nexport default withStyles(styles)(MediaCard);\n\n{/* <td>{this.props.project.name}</td> \n                            <br></br>\n                            <td>{this.props.project.description}</td>\n                    <br></br>\n                            <td>{this.props.project.thumbnail}</td>\n                    <br></br>\n                            <td>{this.props.project.website}</td>\n                    <br></br>\n                            <td>{this.props.project.date_completed}</td>\n                    <br></br>\n                            <td>{this.props.project.tag_id}</td>  */}"]},"metadata":{},"sourceType":"module"}