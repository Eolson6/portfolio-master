{"ast":null,"code":"import _classCallCheck from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erbear/primeTier2/sagas-portfolio-master/src/components/ProjectsList/ProjectsList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nvar ProjectsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectsList, _Component);\n\n  function ProjectsList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProjectsList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProjectsList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getProjects = function () {\n      var action = {\n        type: 'GET_PROJECTS'\n      };\n\n      _this.props.dispatch(action);\n    };\n\n    return _this;\n  }\n\n  _createClass(ProjectsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getProjects();\n    }\n  }, {\n    key: \"displayDescription\",\n    value: function displayDescription() {\n      if (!this.props.project.description) {\n        return null;\n      } else {\n        return this.props.project.description;\n      }\n    }\n  }, {\n    key: \"displaythumbnail\",\n    value: function displaythumbnail() {\n      if (!this.props.project.thumbnail) {\n        return null;\n      } else {\n        return this.props.project.thumbnail;\n      }\n    }\n  }, {\n    key: \"displayWebsite\",\n    value: function displayWebsite() {\n      if (!this.props.project.website) {\n        return null;\n      } else {\n        return this.props.project.website;\n      }\n    }\n  }, {\n    key: \"displayProjectDate\",\n    value: function displayProjectDate() {\n      if (!this.props.project.date_completed) {\n        return null;\n      } else {\n        return this.props.project.date_completed;\n      }\n    }\n  }, {\n    key: \"displayTagId\",\n    value: function displayTagId() {\n      if (!this.props.project.tag_id) {\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        clasName: \"projectList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.props.project.name, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), this.displayDescription(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), this.displaythumbnail(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), this.displayWebsite(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), this.displayProjectDate(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), this.displayTagId());\n    }\n  }]);\n\n  return ProjectsList;\n}(Component);\n\nvar mapReduxStoreToProps = function mapReduxStoreToProps(reduxStore) {\n  return {\n    reduxStore: reduxStore\n  };\n};\n\nexport default connect(mapReduxStoreToProps)(ProjectsList);","map":{"version":3,"sources":["/Users/erbear/primeTier2/sagas-portfolio-master/src/components/ProjectsList/ProjectsList.js"],"names":["React","Component","connect","PropTypes","withStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","ProjectsList","getProjects","action","type","props","dispatch","project","description","thumbnail","website","date_completed","tag_id","name","displayDescription","displaythumbnail","displayWebsite","displayProjectDate","displayTagId","mapReduxStoreToProps","reduxStore"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;IAEMC,Y;;;;;;;;;;;;;;;;;;UAMFC,W,GAAc,YAAM;AAChB,UAAMC,MAAM,GAAG;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAf;;AACA,YAAKC,KAAL,CAAWC,QAAX,CAAoBH,MAApB;AACH,K;;;;;;;wCAPmB;AAChB,WAAKD,WAAL;AACH;;;yCAOoB;AACjB,UAAI,CAAC,KAAKG,KAAL,CAAWE,OAAX,CAAmBC,WAAxB,EAAqC;AACrC,eAAO,IAAP;AACH,OAFG,MAEE;AACF,eAAQ,KAAKH,KAAL,CAAWE,OAAX,CAAmBC,WAA3B;AACH;AACJ;;;uCAEsB;AACX,UAAG,CAAC,KAAKH,KAAL,CAAWE,OAAX,CAAmBE,SAAvB,EAAkC;AAClC,eAAO,IAAP;AACC,OAFD,MAEO;AACH,eAAQ,KAAKJ,KAAL,CAAWE,OAAX,CAAmBE,SAA3B;AACH;AACR;;;qCAEgB;AACb,UAAI,CAAC,KAAKJ,KAAL,CAAWE,OAAX,CAAmBG,OAAxB,EAAiC;AAC7B,eAAO,IAAP;AACH,OAFD,MAEO;AACH,eAAQ,KAAKL,KAAL,CAAWE,OAAX,CAAmBG,OAA3B;AACH;AACJ;;;yCAEoB;AACjB,UAAI,CAAC,KAAKL,KAAL,CAAWE,OAAX,CAAmBI,cAAxB,EAAwC;AACpC,eAAO,IAAP;AACH,OAFD,MAEO;AACH,eAAQ,KAAKN,KAAL,CAAWE,OAAX,CAAmBI,cAA3B;AACH;AAEJ;;;mCAEa;AACV,UAAI,CAAC,KAAKN,KAAL,CAAWE,OAAX,CAAmBK,MAAxB,EAAgC;AAC5B,eAAO,IAAP;AACH;AAEJ;;;6BAIQ;AAGL,aAEgB;AAAK,QAAA,QAAQ,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKP,KAAL,CAAWE,OAAX,CAAmBM,IADpB,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAGG,KAAKC,kBAAL,EAHH,EAIR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJQ,EAKC,KAAKC,gBAAL,EALD,EAMR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANQ,EAOG,KAAKC,cAAL,EAPH,EAQR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARQ,EASP,KAAKC,kBAAL,EATO,EAUR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVQ,EAWG,KAAKC,YAAL,EAXH,CAFhB;AAgCH;;;;EAxFsB5B,S;;AA2F3B,IAAM6B,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,UAAD;AAAA,SAAiB;AAC1CA,IAAAA,UAAU,EAAVA;AAD0C,GAAjB;AAAA,CAA7B;;AAGA,eAAe7B,OAAO,CAAC4B,oBAAD,CAAP,CAA8BlB,YAA9B,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nclass ProjectsList extends Component {\n\n    componentDidMount() {\n        this.getProjects();\n    }\n\n    getProjects = () => {\n        const action = { type: 'GET_PROJECTS' };\n        this.props.dispatch(action);\n    }\n\n    displayDescription() {\n        if (!this.props.project.description) {\n        return null;\n    } else{\n        return (this.props.project.description)\n    }\n}\n    \n    displaythumbnail() {\n            if(!this.props.project.thumbnail) {\n            return null;\n            } else {\n                return (this.props.project.thumbnail)\n            }\n    }\n\n    displayWebsite() {\n        if (!this.props.project.website) {\n            return null;\n        } else {\n            return (this.props.project.website)\n        }\n    }\n\n    displayProjectDate() {\n        if (!this.props.project.date_completed) {\n            return null;\n        } else {\n            return (this.props.project.date_completed)\n        }\n\n    }\n   \n    displayTagId(){\n        if (!this.props.project.tag_id) {\n            return null;\n        }\n\n    }\n    \n\n\n    render() {\n \n       \n        return (\n            \n                        <div clasName='projectList'>\n                        {this.props.project.name}\n                        <br></br>\n                          {this.displayDescription()}\n                <br></br>\n                        {this.displaythumbnail()}\n                <br></br>\n                          {this.displayWebsite()}\n                <br></br>\n                {this.displayProjectDate()}\n                <br></br>\n                          {this.displayTagId()}\n                            \n                             {/* <td>{this.props.project.name}</td> \n                            <br></br>\n                            <td>{this.props.project.description}</td>\n                    <br></br>\n                            <td>{this.props.project.thumbnail}</td>\n                    <br></br>\n                            <td>{this.props.project.website}</td>\n                    <br></br>\n                            <td>{this.props.project.date_completed}</td>\n                    <br></br>\n                            <td>{this.props.project.tag_id}</td>  */}\n                         \n                        \n\n            </div>\n            \n        );\n    }\n}\n\nconst mapReduxStoreToProps = (reduxStore) => ({\n    reduxStore\n});\nexport default connect(mapReduxStoreToProps)(ProjectsList);"]},"metadata":{},"sourceType":"module"}