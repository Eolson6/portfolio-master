{"ast":null,"code":"import _classCallCheck from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erbear/primeTier2/sagas-portfolio-master/src/components/ProjectsList/ProjectsList.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nvar styles = {\n  card: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n};\n\nfunction MediaCard(props) {\n  var classes = props.classes;\n}\n\nvar ProjectsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectsList, _Component);\n\n  function ProjectsList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProjectsList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProjectsList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getProjects = function () {\n      var action = {\n        type: 'GET_PROJECTS'\n      };\n\n      _this.props.dispatch(action);\n    };\n\n    return _this;\n  }\n\n  _createClass(ProjectsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getProjects();\n    }\n  }, {\n    key: \"displayDescription\",\n    value: function displayDescription() {\n      if (!this.props.project.description) {\n        return null;\n      } else {\n        return this.props.project.description;\n      }\n    }\n  }, {\n    key: \"displaythumbnail\",\n    value: function displaythumbnail() {\n      if (!this.props.project.thumbnail) {\n        return null;\n      } else {\n        return this.props.project.thumbnail;\n      }\n    }\n  }, {\n    key: \"displayWebsite\",\n    value: function displayWebsite() {\n      if (!this.props.project.website) {\n        return null;\n      } else {\n        return this.props.project.website;\n      }\n    }\n  }, {\n    key: \"displayProjectDate\",\n    value: function displayProjectDate() {\n      if (!this.props.project.date_completed) {\n        return null;\n      } else {\n        return this.props.project.date_completed;\n      }\n    }\n  }, {\n    key: \"displayTagId\",\n    value: function displayTagId() {\n      if (!this.props.project.tag_id) {\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(CardMedia, {\n        className: classes.media,\n        image: \"/static/images/cards/contemplative-reptile.jpg\",\n        title: \"Contemplative Reptile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.props.project.name), React.createElement(Typography, {\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), this.displayDescription(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), this.displaythumbnail(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), this.displayWebsite(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), this.displayProjectDate(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), this.displayTagId()))), React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Share\"), React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Learn More\")));\n    }\n  }]);\n\n  return ProjectsList;\n}(Component);\n\nexport default withStyles(styles)(ProjectsList); // const mapReduxStoreToProps = (reduxStore) => ({\n//     reduxStore\n// });\n// // export default connect(mapReduxStoreToProps)(ProjectsList);\n// export default withStyles(styles)(MediaCard);\n// {/* <td>{this.props.project.name}</td> \n//         <br></br>\n//         <td>{this.props.project.description}</td>\n// <br></br>\n//         <td>{this.props.project.thumbnail}</td>\n// <br></br>\n//         <td>{this.props.project.website}</td>\n// <br></br>\n//         <td>{this.props.project.date_completed}</td>\n// <br></br>\n//         <td>{this.props.project.tag_id}</td>  */}","map":{"version":3,"sources":["/Users/erbear/primeTier2/sagas-portfolio-master/src/components/ProjectsList/ProjectsList.js"],"names":["React","Component","PropTypes","withStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","styles","card","maxWidth","media","height","MediaCard","props","classes","ProjectsList","getProjects","action","type","dispatch","project","description","thumbnail","website","date_completed","tag_id","name","displayDescription","displaythumbnail","displayWebsite","displayProjectDate","displayTagId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n    card: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 140,\n    },\n};\n\nfunction MediaCard(props) {\n    const { classes } = props;\n}\n\n    \nclass ProjectsList extends Component {\n\n\n\n        \n            componentDidMount() {\n                this.getProjects();\n            }\n\n            getProjects = () => {\n                const action = { type: 'GET_PROJECTS' };\n                this.props.dispatch(action);\n            }\n\n            displayDescription() {\n                if (!this.props.project.description) {\n                    return null;\n                } else {\n                    return (this.props.project.description)\n                }\n            }\n\n            displaythumbnail() {\n                if (!this.props.project.thumbnail) {\n                    return null;\n                } else {\n                    return (this.props.project.thumbnail)\n                }\n            }\n\n            displayWebsite() {\n                if (!this.props.project.website) {\n                    return null;\n                } else {\n                    return (this.props.project.website)\n                }\n            }\n\n            displayProjectDate() {\n                if (!this.props.project.date_completed) {\n                    return null;\n                } else {\n                    return (this.props.project.date_completed)\n                }\n\n            }\n\n            displayTagId() {\n                if (!this.props.project.tag_id) {\n                    return null;\n                }\n\n            }\n\n\n\n            render() {\n          \n                return (\n\n                    <Card className={classes.card}>\n                        <CardActionArea>\n                            <CardMedia\n                                className={classes.media}\n                                image=\"/static/images/cards/contemplative-reptile.jpg\"\n                                title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    {this.props.project.name}\n                                </Typography>\n                                <Typography component=\"p\">\n\n                                    <br></br>\n                                    {this.displayDescription()}\n                                    <br></br>\n                                    {this.displaythumbnail()}\n                                    <br></br>\n                                    {this.displayWebsite()}\n                                    <br></br>\n                                    {this.displayProjectDate()}\n                                    <br></br>\n                                    {this.displayTagId()}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                        <CardActions>\n                            <Button size=\"small\" color=\"primary\">\n                                Share\n                    </Button>\n                            <Button size=\"small\" color=\"primary\">\n                                Learn More\n                    </Button>\n                        </CardActions>\n                    </Card >\n                );\n            }\n        }\n    \n    \n    \n    \n\n\n\n\n\nexport default withStyles(styles)(ProjectsList);\n\n// const mapReduxStoreToProps = (reduxStore) => ({\n//     reduxStore\n// });\n// // export default connect(mapReduxStoreToProps)(ProjectsList);\n// export default withStyles(styles)(MediaCard);\n\n// {/* <td>{this.props.project.name}</td> \n                    //         <br></br>\n                    //         <td>{this.props.project.description}</td>\n                    // <br></br>\n                    //         <td>{this.props.project.thumbnail}</td>\n                    // <br></br>\n                    //         <td>{this.props.project.website}</td>\n                    // <br></br>\n                    //         <td>{this.props.project.date_completed}</td>\n                    // <br></br>\n                    //         <td>{this.props.project.tag_id}</td>  */}"]},"metadata":{},"sourceType":"module"}