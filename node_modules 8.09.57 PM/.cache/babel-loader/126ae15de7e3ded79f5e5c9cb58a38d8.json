{"ast":null,"code":"import _classCallCheck from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erbear/primeTier2/sagas-portfolio-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erbear/primeTier2/sagas-portfolio-master/src/components/ProjectsList/ProjectsList.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nvar styles = {\n  card: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n};\n\nfunction MediaCard(props) {\n  var classes = props.classes;\n  return (\n    /*#__PURE__*/\n    function (_Component) {\n      _inherits(ProjectsList, _Component);\n\n      function ProjectsList() {\n        var _getPrototypeOf2;\n\n        var _this;\n\n        _classCallCheck(this, ProjectsList);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProjectsList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n        _this.getProjects = function () {\n          var action = {\n            type: 'GET_PROJECTS'\n          };\n\n          _this.props.dispatch(action);\n        };\n\n        return _this;\n      }\n\n      _createClass(ProjectsList, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          this.getProjects();\n        }\n      }, {\n        key: \"displayDescription\",\n        value: function displayDescription() {\n          if (!this.props.project.description) {\n            return null;\n          } else {\n            return this.props.project.description;\n          }\n        }\n      }, {\n        key: \"displaythumbnail\",\n        value: function displaythumbnail() {\n          if (!this.props.project.thumbnail) {\n            return null;\n          } else {\n            return this.props.project.thumbnail;\n          }\n        }\n      }, {\n        key: \"displayWebsite\",\n        value: function displayWebsite() {\n          if (!this.props.project.website) {\n            return null;\n          } else {\n            return this.props.project.website;\n          }\n        }\n      }, {\n        key: \"displayProjectDate\",\n        value: function displayProjectDate() {\n          if (!this.props.project.date_completed) {\n            return null;\n          } else {\n            return this.props.project.date_completed;\n          }\n        }\n      }, {\n        key: \"displayTagId\",\n        value: function displayTagId() {\n          if (!this.props.project.tag_id) {\n            return null;\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return React.createElement(Card, {\n            className: classes.card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, React.createElement(CardActionArea, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, React.createElement(CardMedia, {\n            className: classes.media,\n            image: \"/static/images/cards/contemplative-reptile.jpg\",\n            title: \"Contemplative Reptile\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }), React.createElement(CardContent, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, React.createElement(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, this.props.project.name), React.createElement(Typography, {\n            component: \"p\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }), this.displayDescription(), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }), this.displaythumbnail(), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }), this.displayWebsite(), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }), this.displayProjectDate(), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }), this.displayTagId()))), React.createElement(CardActions, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, React.createElement(Button, {\n            size: \"small\",\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, \"Share\"), React.createElement(Button, {\n            size: \"small\",\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, \"Learn More\")));\n        }\n      }]);\n\n      return ProjectsList;\n    }(Component)\n  );\n}\n\nMediaCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ProjectsList); // const mapReduxStoreToProps = (reduxStore) => ({\n//     reduxStore\n// });\n// // export default connect(mapReduxStoreToProps)(ProjectsList);\n// export default withStyles(styles)(MediaCard);\n// {/* <td>{this.props.project.name}</td> \n//         <br></br>\n//         <td>{this.props.project.description}</td>\n// <br></br>\n//         <td>{this.props.project.thumbnail}</td>\n// <br></br>\n//         <td>{this.props.project.website}</td>\n// <br></br>\n//         <td>{this.props.project.date_completed}</td>\n// <br></br>\n//         <td>{this.props.project.tag_id}</td>  */}","map":{"version":3,"sources":["/Users/erbear/primeTier2/sagas-portfolio-master/src/components/ProjectsList/ProjectsList.js"],"names":["React","Component","PropTypes","withStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","styles","card","maxWidth","media","height","MediaCard","props","classes","getProjects","action","type","dispatch","project","description","thumbnail","website","date_completed","tag_id","name","displayDescription","displaythumbnail","displayWebsite","displayProjectDate","displayTagId","propTypes","object","isRequired","ProjectsList"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n    card: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 140,\n    },\n};\n\nfunction MediaCard(props) {\n    const { classes } = props;\n    return (\n\n        class ProjectsList extends Component {\n            componentDidMount() {\n                this.getProjects();\n            }\n\n            getProjects = () => {\n                const action = { type: 'GET_PROJECTS' };\n                this.props.dispatch(action);\n            }\n\n            displayDescription() {\n                if (!this.props.project.description) {\n                    return null;\n                } else {\n                    return (this.props.project.description)\n                }\n            }\n\n            displaythumbnail() {\n                if (!this.props.project.thumbnail) {\n                    return null;\n                } else {\n                    return (this.props.project.thumbnail)\n                }\n            }\n\n            displayWebsite() {\n                if (!this.props.project.website) {\n                    return null;\n                } else {\n                    return (this.props.project.website)\n                }\n            }\n\n            displayProjectDate() {\n                if (!this.props.project.date_completed) {\n                    return null;\n                } else {\n                    return (this.props.project.date_completed)\n                }\n\n            }\n\n            displayTagId() {\n                if (!this.props.project.tag_id) {\n                    return null;\n                }\n\n            }\n\n\n\n            render() {\n          \n                return (\n\n                    <Card className={classes.card}>\n                        <CardActionArea>\n                            <CardMedia\n                                className={classes.media}\n                                image=\"/static/images/cards/contemplative-reptile.jpg\"\n                                title=\"Contemplative Reptile\"\n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    {this.props.project.name}\n                                </Typography>\n                                <Typography component=\"p\">\n\n                                    <br></br>\n                                    {this.displayDescription()}\n                                    <br></br>\n                                    {this.displaythumbnail()}\n                                    <br></br>\n                                    {this.displayWebsite()}\n                                    <br></br>\n                                    {this.displayProjectDate()}\n                                    <br></br>\n                                    {this.displayTagId()}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                        <CardActions>\n                            <Button size=\"small\" color=\"primary\">\n                                Share\n                    </Button>\n                            <Button size=\"small\" color=\"primary\">\n                                Learn More\n                    </Button>\n                        </CardActions>\n                    </Card >\n                );\n            }\n        }\n    )\n}\n\n\nMediaCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ProjectsList);\n\n// const mapReduxStoreToProps = (reduxStore) => ({\n//     reduxStore\n// });\n// // export default connect(mapReduxStoreToProps)(ProjectsList);\n// export default withStyles(styles)(MediaCard);\n\n// {/* <td>{this.props.project.name}</td> \n                    //         <br></br>\n                    //         <td>{this.props.project.description}</td>\n                    // <br></br>\n                    //         <td>{this.props.project.thumbnail}</td>\n                    // <br></br>\n                    //         <td>{this.props.project.website}</td>\n                    // <br></br>\n                    //         <td>{this.props.project.date_completed}</td>\n                    // <br></br>\n                    //         <td>{this.props.project.tag_id}</td>  */}"]},"metadata":{},"sourceType":"module"}